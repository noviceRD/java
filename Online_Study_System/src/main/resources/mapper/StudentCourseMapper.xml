<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xzy.mapper.StudentCourseMapper" >
  <resultMap id="rm" type="StudentCourse" >
    <result column="course_id" property="courseId" jdbcType="INTEGER" />
    <result column="student_id" property="studentId" jdbcType="INTEGER" />
    <result column="mark" property="mark" jdbcType="INTEGER" />
    <result column="has_exam" property="hasExam" jdbcType="INTEGER" />
  </resultMap>
  <!--查询课程是否有学生选择-->
  <select id="selectCourseWithStudent" parameterType="StudentCourse" resultMap="rm">
    select * from student_course where course_id=#{id};
  </select>
  <!--根据课程id查询学生信息-->
  <select id="selectStudentWithCourseId" parameterType="StudentCourse" resultMap="rm">
    select s.number as studentNumber,s.name as studentName,s.sex as studentSex,sc.has_exam,sc.mark,c.name as courseName
    from student s
    inner join student_course sc
    inner join course c
    on(s.id=sc.student_id and c.id=sc.course_id) where course_id=#{id};
  </select>
  <!--根据学生id查找学生已选课程信息-->
  <select id="selectByStudentId" parameterType="StudentCourse" resultMap="rm">
    select c.id as courseId ,c.name as courseName,c.video as courseVideo,t.name as teacherName from course c inner join student_course sc inner join teacher t
    on(c.id=sc.course_id and c.teacher_id=t.id) where student_id=#{id};
  </select>
   <!--根据学生id查找已修课程信息-->
  <select id="selectCourseByStudentId" resultMap="rm" parameterType="StudentCourse">
    select c.id as courseId,c.name as courseName ,c.video as courseVideo,t.name as teacherName,sc.mark,sc.has_exam as hasExam from course c inner join student_course sc inner join teacher t
    on(c.id=sc.course_id and c.teacher_id=t.id) where student_id=#{id};
  </select>
  <!--获取选课的学生人数-->
  <select id="selectCount" resultType="Integer">
    select count(student_id) from student_course where student_id=#{id};
  </select>
  <!--查询单条选课信息-->
  <select id="selectOneStudentWithCourse" parameterType="StudentCourse" resultMap="rm">
    select distinct * from student_course where student_id=#{studentId} and course_id=#{courseId};
  </select>
  <!--修改选课信息-->
  <update id="update" parameterType="StudentCourse">
    update student_course
    set course_id = #{courseId},
        student_id = #{studentId},
        mark = #{mark},
        has_exam = #{hasExam}
        where course_id=#{id};
  </update>
  <!--添加选课信息-->
  <insert id="insertStudentCourse" parameterType="StudentCourse">
    insert into student_course
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="courseId != null" >
        course_id,
      </if>
      <if test="studentId != null" >
        student_id,
      </if>
      <if test="mark != null" >
        mark,
      </if>
      <if test="hasExam != null" >
        has_exam,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="courseId != null" >
        #{courseId},
      </if>
      <if test="studentId != null" >
        #{studentId},
      </if>
      <if test="mark != null" >
        #{mark},
      </if>
      <if test="hasExam != null" >
        #{hasExam},
      </if>
    </trim>
  </insert>
  <!--删除选课操作-->
  <delete id="deleteStudentCourse">
    delete from student_course where course_id=#{id};
  </delete>
  <!--插入成绩信息-->
  <update id="updateScore" parameterType="StudentCourse">
      update student_course
      set mark = #{mark},has_exam = #{hasExam}
      where course_id=#{courseId} and student_id=#{studentId};
  </update>
  <!--退课操作-->
  <delete id="deleteChoseCourse">
    delete from student_course where course_id=#{id} and student_id=#{stuId};
  </delete>
</mapper>